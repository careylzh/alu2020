module au_top (
    input clk,              // 50MHz clock
    input usb_rx,
    output usb_tx,
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8],    // DIP switches on IO Shield
    input button
    ) {
  
  sig rst;                  // reset signal
  fsmLogic fsmLogicInstance(.clk(clk),.rst(rst));
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    
    .rst(rst){

    }
  }
            
  always {
    io_seg=fsmLogicInstance.io_seg;
    io_sel=fsmLogicInstance.io_sel;
    usb_tx = usb_rx;        // echo the serial data
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    led = 8h00;             // turn LEDs on board(not shield) off
    io_led = fsmLogicInstance.io_led;
    fsmLogicInstance.io_dip = io_dip;
    fsmLogicInstance.io_button = io_button;
  }
}
